<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Test on My External Storage</title>
    <link>https://budougumi0617.github.io/tags/test/</link>
    <description>Recent content in Test on My External Storage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <managingEditor>budougumi[at]gmail.com (budougumi0617)</managingEditor>
    <webMaster>budougumi[at]gmail.com (budougumi0617)</webMaster>
    <lastBuildDate>Sun, 19 Aug 2018 12:14:01 +0900</lastBuildDate>
    
	<atom:link href="https://budougumi0617.github.io/tags/test/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Goのtestを理解する in 2018 #go</title>
      <link>https://budougumi0617.github.io/2018/08/19/go-testing2018/</link>
      <pubDate>Sun, 19 Aug 2018 12:14:01 +0900</pubDate>
      <author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2018/08/19/go-testing2018/</guid>
      <description>&lt;p&gt;2018年夏(Go1.10)時点でGoのテスト方法をまとめる。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Go]go.uber.org/zap.loggerの出力をbytes.Bufferに変更する #golang</title>
      <link>https://budougumi0617.github.io/2018/05/24/inject-io-writer-to-zap-logger/</link>
      <pubDate>Thu, 24 May 2018 08:44:38 +0900</pubDate>
      <author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2018/05/24/inject-io-writer-to-zap-logger/</guid>
      <description>go.uber.org/zapのzap.loggerは構造化されたログを高速に出力できるとしてGolangのLoggerの中で有名だ。 https://github.com/uber-go/zap gR</description>
    </item>
    
    <item>
      <title>[Go]gomockを使ったgRPCのテスト</title>
      <link>https://budougumi0617.github.io/2018/01/21/try-gomock-on-grpc-go/</link>
      <pubDate>Sun, 21 Jan 2018 19:21:28 +0900</pubDate>
      <author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2018/01/21/try-gomock-on-grpc-go/</guid>
      <description>gRPCの勉強というより、gomockの勉強と言ったほうが良いかもしれないが、 protocコマンドで生成したgRPCコードをモックしてテスト</description>
    </item>
    
    <item>
      <title>Rspec内でテスト対象のControllerのメソッドの戻り値をスタブする</title>
      <link>https://budougumi0617.github.io/2017/09/20/rspec-access-controller/</link>
      <pubDate>Wed, 20 Sep 2017 08:52:42 +0900</pubDate>
      <author>budougumi[at]gmail.com (budougumi0617)</author>
      <guid>https://budougumi0617.github.io/2017/09/20/rspec-access-controller/</guid>
      <description>C#では対象インスタンスのメソッドの挙動を変えることは出来ないので、別の手段を探していたのだが、rubyでは出来た。 TL;DR RSpec書いたCon</description>
    </item>
    
  </channel>
</rss>