<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on My External Storage</title>
    <link>https://budougumi0617.github.io/categories/devops/</link>
    <description>Recent content in Devops on My External Storage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Fri, 13 Oct 2017 17:06:29 +0900</lastBuildDate>
    <atom:link href="/categories/devops/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>GitHubのタグに連動して、.NETStandard1.6のNugetパッケージを自動リリースする。</title>
      <link>https://budougumi0617.github.io/post/2017/10/13/publish-nupkg-by-appveyor/</link>
      <pubDate>Fri, 13 Oct 2017 17:06:29 +0900</pubDate>
      
      <guid>https://budougumi0617.github.io/post/2017/10/13/publish-nupkg-by-appveyor/</guid>
      <description>TL;DR .NET Standard1.6ベースでNugetパッケージを作っています。GitHubでリリースしたとき(git tagをプッシュしたとき)、自動的にnuget.org上のパッケージが更新されるようにしました。
https://ci.appveyor.com/project/budougumi0617/testable/build/0.0.74
---------------------------PRや通常のプッシュをトリガーにビルドしたとき Uploading artifacts... [1/1] Budougumi0617.Testable.0.0.5.nupkg (5,100 bytes)...100% &amp;quot;NuGet&amp;quot; deployment has been skipped as environment variable has not matched (&amp;quot;appveyor_repo_tag&amp;quot; is &amp;quot;false&amp;quot;, should be &amp;quot;true&amp;quot;) Build success ---------------------------タグをトリガーにビルドしたとき Uploading artifacts... [1/1] Budougumi0617.Testable.0.0.5.nupkg (5,101 bytes)...100% Deploying using NuGet provider Publishing Budougumi0617.Testable.0.0.5.nupkg to https://www.nuget.org/api/v2/package...OK Total packages published: 1 Build success  実際に利用しているリポジトリは以下になります。
budougumi0617.Testable   
https://github.com/budougumi0617/Testable
関連ツールや対象プロジェクトについて    用途 ツール名     構成管理 GitHub   自動ビルド/自動デプロイ AppVeyor   リリース対象のnupkg .</description>
    </item>
    
    <item>
      <title>.NET Standard1.6プロジェクトのCI環境を構築する。</title>
      <link>https://budougumi0617.github.io/post/2017/07/25/ci-for-dotnet16/</link>
      <pubDate>Tue, 25 Jul 2017 20:46:26 +0900</pubDate>
      
      <guid>https://budougumi0617.github.io/post/2017/07/25/ci-for-dotnet16/</guid>
      <description>TL;DR .NET Standard1.6ベースでNugetパッケージを作っています。開発で利用しているCI環境の構築方法です。実際に利用しているリポジトリは以下になります。
 
https://github.com/budougumi0617/Testable
現状出来ているのは以下です。git tagで自動パッケージリリースなども追って対応していきたいなと思っています。
 GitHubのリポジトリが更新されたとき、自動でビルドが実施される。 ビルド時にリポジトリに同梱されているテストプロジェクトが自動で実行される。 テストのカバレッジを計測し、Codecovで結果を可視化する。 バッジでビルド結果とカバレッジ率がわかる。  .NET Standard1.6(VS2017)環境で構築したプロジェクト向けの記事なので、その他の環境の場合はまず公式サイトなどを参考にしてください。
CodeCov Test Coverage Integration
AppVeyorとCodecovを使ってC#のコードカバレッジを計測する
構築手順 利用ツール/サービス 基本的に無料のツールで構築していきます。
   用途 ツール名     IDE Visual Studio2017/Visual Studio for Mac   テスト XUnit/OpenCover   構成管理 GitHub   CI AppVeyor/Codecov    以降では、GitHubリポジトリに.NET1.6プロジェクトが入った状態のあとの説明です。
XUnitプロジェクトを作成する。 まず、以下の記事を参考に、テストプロジェクトを作成してください。
.NET StandardプロジェクトをxUnitでテストする方法
VS for Macの場合は、「新しいプロジェクトの追加」から、「xUnit Test Project」を選択することで同等のプロジェクトを作成することができます。.NET1.6プロジェクトを参照するテストプロジェクトを作成する場合は.NET Coreプロジェクトで作るのが無難です。
その後、カバレッジ計測に必要な、xunit.runner.consoleとOpenCoverもNugetからテストプロジェクトに追加しておいてください。全てを行うと、テストプロジェクトの.csprojファイルには以下のパッケージが追加されているはずです。
&amp;lt;ItemGroup&amp;gt; &amp;lt;PackageReference Include=&amp;quot;Microsoft.NET.Test.Sdk&amp;quot; Version=&amp;quot;15.</description>
    </item>
    
  </channel>
</rss>
